(function () {

    angular.module('meanApp', ['ui.bootstrap', 'ngRoute']);

    function config ($routeProvider, $locationProvider) {
        $routeProvider
            .when('/', {
                templateUrl: '/home/home.view.html',
                controller: 'homeCtrl',
            })
            .when('/register', {
                templateUrl: '/authentication/register/register.view.html',
                controller: 'registerCtrl',
            })
            .when('/login', {
                templateUrl: '/authentication/login/login.view.html',
                controller: 'loginCtrl',
            })
            .when('/message', {
                templateUrl: '/profile/messages/messages.view.html',
                controller: 'messageCtrl',
            })
            .when('/characters', {
                templateUrl: '/characters/characters.view.html',
                controller: 'charCtrl',
            })
            .when('/profile/:id', {
                templateUrl: '/profile/profile/profile.view.html',
                controller: 'profileCtrl',
            })
            .when('/profile', {
                templateUrl: '/profile/profile/profile.view.html',
                controller: 'profileCtrl',
            })
            .when('/settings', {
                templateUrl: '/profile/settings/settings.view.html',
                controller: 'settingsCtrl',
            })
            .otherwise({redirectTo: '/'});

        // use the HTML5 History API
        $locationProvider.html5Mode(true);
    }

    //TODO: update this to handle other things non logged in people shouldn't see
    function run($rootScope, $location, authentication) {
        $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {
            if ($location.path() === '/profile' && !authentication.isLoggedIn()) {
                $location.path('/');
            }
        });
    }

    angular
        .module('meanApp')
        .config(['$routeProvider', '$locationProvider', config])
        .run(['$rootScope', '$location', 'authentication', run]);

})();
(function() {

    angular
        .module('meanApp')
        .controller('charCtrl', charCtrl);

    charCtrl.$inject = ['$scope', 'meanConfig'];
    function charCtrl($scope, meanConfig) {
        $scope.indices = [];
        $scope.displayChar;
        $scope.attackIndex = 0;
        meanConfig.getCharacters()
            .success(function (data) {
                $scope.characters = data.characters;
            })
            .error(function (e) {
                console.log(e);
            })
            .then(function () {
                $scope.displayChar = $scope.characters[0];
                for(var i = 0; i < $scope.characters.length; i += 4){
                    $scope.indices.push(i);
                }
            });

        $scope.changeDisplay = function (index) {
            $scope.displayChar = $scope.characters[index];
            $scope.attackIndex = 0;
        };

        $scope.changeAttack = function (index) {
            $scope.attackIndex = index;
        };
    }

})();
(function() {

    angular
        .module('meanApp')
        .controller('homeCtrl', homeCtrl);

    function homeCtrl () {
        console.log('Home controller is running');
    }

})();
/**
 * Created by Ryan on 18/07/2016.
 */

(function () {

    angular
        .module('meanApp')
        .controller('loginCtrl', loginCtrl);

    loginCtrl.$inject = ['$location', '$scope', 'authentication'];
    function loginCtrl($location, $scope, authentication) {

        $scope.credentials = {
            email : "",
            password : ""
        };

        $scope.onSubmit = function () {
            authentication
                .login($scope.credentials)
                .error(function(err){
                    alert(err.message);
                })
                .then(function(){
                    $location.path('/');
                });
        };

    }

})();
(function () {

    angular
        .module('meanApp')
        .controller('registerCtrl', registerCtrl);

    registerCtrl.$inject = ['$location', '$scope', 'authentication'];
    function registerCtrl($location, $scope, authentication) {

        $scope.errorPresent = false;
        $scope.errorMsg = [];

        $scope.credentials = {
            username: "",
            email : "",
            password : "",
            confirmPass : ""
        };


        var onError = function (err) {
            console.log('Registration failed due to incorrect field values');
            $scope.errorPresent = true;
            $scope.errorMsg = err.errorMessage;
        };
        
        $scope.onSubmit = function () {
            console.log('Checking registration...');

            authentication
                .register($scope.credentials)
                .error(onError)
                .then(function () {
                    $location.path('profile');
                    console.log('Submitting registration');
                });
        };

    }

})();
(function () {

    angular
        .module('meanApp')
        .service('authentication', authentication);

    authentication.$inject = ['$http', '$window'];
    function authentication ($http, $window) {

        var saveToken = function (token) {
            $window.localStorage['token'] = token;
        };

        var getToken = function () {
            return $window.localStorage['token'];
        };

        var isLoggedIn = function() {
            var token = getToken();
            var payload;

            if(token){
                payload = token.split('.')[1];
                payload = $window.atob(payload);
                payload = JSON.parse(payload);

                return payload.exp > Date.now() / 1000;
            } else {
                return false;
            }
        };

        var currentUser = function() {
            if(isLoggedIn()){
                var token = getToken();
                var payload = token.split('.')[1];
                payload = $window.atob(payload);
                payload = JSON.parse(payload);
                return {
                    email : payload.email,
                    name : payload.name
                };
            }
        };

        var register = function(user) {
            return $http.post('/api/register', user).success(function(data){
                saveToken(data.token);
            });
        };

        var login = function(user) {
            return $http.post('/api/login', user).success(function(data) {
                saveToken(data.token);
            });
        };

        var logout = function() {
            $window.localStorage.removeItem('token');
        };

        return {
            currentUser : currentUser,
            saveToken : saveToken,
            getToken : getToken,
            isLoggedIn : isLoggedIn,
            register : register,
            login : login,
            logout : logout
        };
    }

})();
(function() {

    angular
        .module('meanApp')
        .service('meanConfig', meanConfig);

    meanConfig.$inject = ['$http'];
    function meanConfig ($http) {

        var getCharacters = function () {
            return $http.get('/api/characters')
        };

        var getCollection = function (id) {
            var url = '/api/collection/' + id;
            return $http.get(url);
        };

        return {
            getCharacters : getCharacters,
            getCollection : getCollection
        };
    }

})();
(function() {

    angular
        .module('meanApp')
        .service('meanData', meanData);

    meanData.$inject = ['$http', 'authentication'];
    function meanData ($http, authentication) {

        var getProfile = function () {
            return $http.get('/api/profile', {
                headers: {
                    Authorization: 'Bearer '+ authentication.getToken()
                }
            });
        };

        var getProfileById = function(id){
            var url = '/api/profile/' + id;
            return $http.get(url);
        };

        var sendMessage = function(sender, receiver, message) {
            var date = new Date();
            var url = '/api/message/' + receiver;
            var request = {
                sender : sender,
                dateSent : date,
                message : message
            }
            return $http.post(url, request);
        };
        
        var addFriend = function (sender, receiver) {
            var url = 'api/friend/' + receiver;
            return $http.post(url, {sender : sender});
        };
        
        var acceptFriend = function (sender, receiver) {
            var url = 'api/accept-friend/' + receiver;
            return $http.post(url, {sender : sender});
        };

        var rejectFriend = function (sender, receiver) {
            var url = 'api/reject-friend/' + receiver;
            return $http.post(url, {sender : sender});
        };

        var deleteFriend = function (sender, receiver) {
            var url = 'api/delete-friend/' + receiver;
            return $http.post(url, {sender : sender});
        };

        var changePassword = function (passwords) {
            return $http.post('api/settings/password', passwords);
        };

        var changeEmail = function (user) {
            return $http.post('api/settings/email', user);
        };

        var changeProfilePic = function (user) {
            return $http.post('api/settings/profilePic', user);
        };

        return {
            getProfile : getProfile,
            getProfileById : getProfileById,
            sendMessage : sendMessage,
            addFriend : addFriend,
            acceptFriend : acceptFriend,
            rejectFriend : rejectFriend,
            deleteFriend : deleteFriend,
            changePassword : changePassword,
            changeEmail : changeEmail,
            changeProfilePic : changeProfilePic
        };
    }

})();
(function () {

    angular
        .module('meanApp')
        .controller('messageCtrl', messageCtrl);

    messageCtrl.$inject = ['$scope', 'meanData','authentication'];
    function messageCtrl($scope, meanData, authentication) {

        $scope.isLoggedIn = authentication.isLoggedIn();

        if($scope.isLoggedIn) {
            meanData.getProfile()
                .success(function (data) {
                    $scope.messages = data.messages;
                })
                .error(function (e) {
                    console.log(e);
                });
        }
    }

})();
/**
 * Created by Ryan on 18/07/2016.
 */

(function() {

    angular
        .module('meanApp')
        .controller('profileCtrl', profileCtrl);

    profileCtrl.$inject = ['$scope', '$routeParams','$route', '$uibModal', 'meanData', 'meanConfig'];
    function profileCtrl($scope, $routeParams, $route, $uibModal, meanData, meanConfig) {

        var id = $routeParams.id;
        $scope.user = {};
        $scope.displayFriends = true;
        $scope.indices = [];

        if(id){
            meanData.getProfileById(id)
                .success(function (data) {
                    $scope.user = data;

                })
                .error(function (err) {
                    console.log(err);
                })
                .then(function () {
                    meanData.getProfile()
                        .success(function (innerData) {
                            $scope.myUsername = innerData.username;
                            $scope.myProfile = innerData.username === $scope.user.username;
                        })
                        .error(function (err) {
                            console.log(err)
                        });
                })
                .then(function () {
                   meanConfig.getCollection($scope.user.username)
                        .success(function (data) {
                            $scope.collection = data.collection;
                        })
                       .error(function (err) {
                           console.log(err);
                       })
                       .then(function () {
                           for(var i = 0; i < $scope.collection.length; i += 4){
                               $scope.indices.push(i);
                           }
                       });
                });

        } else {
            meanData.getProfile()
                .success(function (data) {
                    $scope.user = data;
                    $scope.myProfile = true;
                })
                .error(function (e) {
                    console.log(e);
                })
                .then(function () {
                    meanConfig.getCollection($scope.user.username)
                        .success(function (data) {
                            $scope.collection = data.collection;
                        })
                        .error(function (err) {
                            console.log(err);
                        })
                        .then(function () {
                            for(var i = 0; i < $scope.collection.length; i += 4){
                                $scope.indices.push(i);
                            }
                        });
                });

        }
        
        $scope.open = function (size) {
            var modalInstance = $uibModal.open({
                animation: true,
                templateUrl: '/profile/profile/profile.message.modal.html',
                controller: 'ModalInstanceCtrl',
                size: size
            });

            modalInstance.result.then(function (message){
                meanData.sendMessage($scope.myUsername, $scope.user.username, message)
                    .error(function (err) {
                        console.log(err);
                    })
                    .then(function () {
                        console.log('Message sent correctly');
                    });
            });
        };
        
        $scope.addFriend = function () {
            meanData.addFriend($scope.myUsername, $scope.user.username)
                .error(function (err) {
                    console.log(err.error);
                    alert(err.error);
                })
                .then(function () {
                    alert('Friend request sent');
                    console.log('Friend Request sent');
                });
        };
        
        $scope.acceptFriend = function (friend) {
            meanData.acceptFriend(friend, $scope.user.username)
                .error(function (err) {
                    console.log(err);
                })
                .then(function () {
                    console.log('Friend request successfully accepted');
                    $route.reload();
                });
        };
        
        $scope.rejectFriend = function (friend) {
            meanData.rejectFriend(friend, $scope.user.username)
                .error(function (err) {
                    console.log(err);
                })
                .then(function () {
                    console.log('Friend request successfully rejected');
                    $route.reload();
                });
        };
        
        $scope.deleteFriend = function (friend) {
            meanData.deleteFriend(friend, $scope.user.username)
                .error(function (err) {
                    console.log(err);
                })
                .then(function () {
                    console.log('Friend successfully removed from list');
                    $route.reload();
                });
        }
    }

})();
(function () {

    angular
        .module('meanApp')
        .controller('ModalInstanceCtrl', ModalInstanceCtrl);

    ModalInstanceCtrl.$inject = ['$scope', '$uibModalInstance'];
    function ModalInstanceCtrl($scope, $uibModalInstance) {

        $scope.message;

        $scope.ok = function () {
            if($scope.message) {
                $uibModalInstance.close($scope.message);
            }
            else {
                $uibModalInstance.dismiss('cancel');
            }
        };

        $scope.cancel = function () {
            $uibModalInstance.dismiss('cancel');
        };
    }

})();
(function() {

    angular
        .module('meanApp')
        .controller('settingsCtrl', settingsCtrl);

    settingsCtrl.$inject = ['$scope', '$location', 'meanData', 'meanConfig'];
    function settingsCtrl($scope, $location, meanData, meanConfig) {
        var tempUser = {};
        $scope.indices = [];
        $scope.passwords = {};
        $scope.email = "";

        meanData.getProfile()
            .success(function (data) {
                tempUser = data;
            })
            .error(function (e) {
                console.log(e);
            })
            .then(function () {
                meanConfig.getCollection(tempUser.username)
                    .success(function (data) {
                        $scope.collection = data.collection;
                    })
                    .error(function (err) {
                        console.log(err);
                    })
                    .then(function () {
                        for(var i = 0; i < $scope.collection.length; i += 4){
                            $scope.indices.push(i);
                        }
                    });
            });

        $scope.onSubmitPass = function () {
            meanData.changePassword({passwords : $scope.passwords, user : tempUser})
                .success(function (data) {
                    console.log(data.message);
                    $location.path('/');
                })
                .error(function (err) {
                    alert(err.message);
                });
        };

        $scope.onSubmitEmail = function () {
            tempUser.email = $scope.email;
            meanData.changeEmail(tempUser)
                .success(function (data) {
                    console.log(data.message);
                    $location.path('/');
                })
                .error(function (err) {
                    alert(err.message);
                });
        };

        $scope.onClickProfilePic = function (characterIndex) {
            tempUser.profilePic = $scope.collection[characterIndex].name;
            meanData.changeProfilePic(tempUser)
                .success(function (data) {
                    console.log(data.message);
                    $location.path('/');
                })
                .error(function (err) {
                    alert(err.message);
                });
        };
    }

})();
(function () {

    angular
        .module('meanApp')
        .controller('navigationCtrl', navigationCtrl);

    navigationCtrl.$inject = ['$scope','authentication'];
    function navigationCtrl($scope, authentication) {

        $scope.isLoggedIn = authentication.isLoggedIn();
        $scope.currentUser = authentication.currentUser();
    }

})();
(function () {

    angular
        .module('meanApp')
        .directive('navigation', navigation);

    function navigation () {
        return {
            restrict: 'EA',
            templateUrl: '/common/directives/navigation/navigation.template.html',
            controller: 'navigationCtrl'
        };
    }

})();
(function () {

    angular
        .module('meanApp')
        .controller('profileViewCtrl', profileViewCtrl);

    profileViewCtrl.$inject = ['$scope','$window','meanData','authentication'];
    function profileViewCtrl($scope, $window, meanData, authentication) {

        $scope.userSidebar = {};
        $scope.searchID = "";

        $scope.isLoggedIn = authentication.isLoggedIn();

        $scope.logOut = function () {
            console.log('logout');
            authentication.logout();
            $window.location.href = '/';
        };
        
        if($scope.isLoggedIn) {
            meanData.getProfile()
                .success(function (data) {
                    $scope.userSidebar = data;
                })
                .error(function (e) {
                    console.log(e);
                });
        }

        $scope.search = function(keyCode){
            if(keyCode === 13){
                $window.location.href = 'profile/' + $scope.searchID;
            }
        };
    }

})();
(function () {

    angular
        .module('meanApp')
        .directive('profileview', profileview);

    function profileview () {
        return {
            restrict: 'EA',
            templateUrl: '/common/directives/profileView/profileView.template.html',
            controller: 'profileViewCtrl'
        };
    }

})();